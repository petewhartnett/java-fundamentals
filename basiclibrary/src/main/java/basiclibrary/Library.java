/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;
import java.util.*;

public class Library {
    public static int[] roll(int n){
        int[] rollSaves = new int[n];

        for(int i = 0; i < n - 1; i++){
            int diceRoll = (int)(Math.random()*6) + 1;
            rollSaves[i] = diceRoll;


        }
        return rollSaves;

    }


    public static boolean containsDuplicates(int[] arr) {

        for (int i = 0; i < arr.length - 1; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] == arr[j]) {
                    return false;
                }
            }

        }


return true;
    }


    public static int averageCount(int[][] arr){

        int lowestAvg = 0;
        for(int i = 0; i < arr.length; i++ ){
            int count = 0;

            for(int j = 0; j < arr[0].length; j++){

                count += arr[i][j];

            }

           int avg = count / arr[i].length;

           // System.out.println(avg);
            if(lowestAvg >  avg || lowestAvg == 0) {
                lowestAvg = avg;

            }

        }

       return lowestAvg;
    }


    public static String temperatures(){

        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        HashSet<Integer> weatherTemp = new HashSet<>();

        for(int[] temp : weeklyMonthTemperatures){
            for(int val : temp) {
                weatherTemp.add(val);

            }
        }
        int min = Integer.MAX_VALUE;
        int max = Integer.MIN_VALUE;
        for(Integer value : weatherTemp){
            if(value < min  ){
                min = value;
            }
            if(value > max){
                max = value;
            }
        }
        String str = "";
        for(int i = min; i < max; i++){

            if(!weatherTemp.contains(i)){

               str+= String.format("missing temps:%d", i);

            }

        }
       // System.out.println(str);
        //System.out.println(String.format("Daily low: %d", min));
        //System.out.println(String.format("Daily max: %d", max));

        return str;
    }



public static String tally(List<String> votes) {


    HashMap<String, Integer>voteCounter = new HashMap<>();

    for(String vote : votes){
        voteCounter.put(vote, 0);
    }

int count = 0;
    String win = "";
    for(String vote : votes){
        if(voteCounter.containsKey(vote)) {

            voteCounter.put(vote, voteCounter.get(vote) +1);
            if (voteCounter.get(vote) > count){
                win = vote;
            }
    }
        else{
            voteCounter.put(vote, 0);

        }
    }
System.out.println(win);
System.out.println(voteCounter);
return win;

}


}
